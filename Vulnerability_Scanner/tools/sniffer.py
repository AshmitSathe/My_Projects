from datetime import datetime
from typing import List, Dict, Optional

try:
    from scapy.all import sniff
except Exception as e:
    sniff = None  

def sniff_packets(count: int = 10, timeout: int = 8, iface: Optional[str] = None) -> List[Dict]:
    """
    Capture `count` packets or until `timeout` seconds.
    Returns a list of {time, summary} dicts.
    Note: sniffing may require administrator/root privileges.
    """
    if sniff is None:
        return [{"time": datetime.now().isoformat(), "summary": "Scapy not installed."}]
    pkts = sniff(count=count, timeout=timeout, iface=iface)
    results = []
    for p in pkts:
        results.append({
            "time": datetime.now().isoformat(timespec="seconds"),
            "summary": p.summary()
        })
    return results
